/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     struct TreeNode *left;
 *     struct TreeNode *right;
 * };
 */
/**
 * Note: The returned array must be malloced, assume caller calls free().
 */

int TreeSize(struct TreeNode* root)
{
    return root==NULL?0:TreeSize(root->left)+TreeSize(root->right)+1;
}

void postorder(struct TreeNode* root,int* a,int* pi)
{
    if(root == NULL)
    return;
    postorder(root->left,a,pi);
    postorder(root->right,a,pi);
    a[(*pi)++]= root->val;
    
}

int* postorderTraversal(struct TreeNode* root, int* returnSize) 
{
    int n = TreeSize(root);
    int* a = (int*)malloc(sizeof(int)*n);
    *returnSize = n;
    int i = 0;
    postorder(root,a,&i);
    return a;
}

