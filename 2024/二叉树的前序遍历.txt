/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     struct TreeNode *left;
 *     struct TreeNode *right;
 * };
 */
/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
 
int TreeSize(struct TreeNode* root)
{
    return root == NULL?0:TreeSize(root->left) + TreeSize(root->right)+1;
}

void preorder(struct TreeNode* root,int* pi,int* a)
{
    if(root == NULL)
    return;
    a[(*pi)++] = root->val;
    preorder(root->left,pi,a);
    preorder(root->right,pi,a);
}

int* preorderTraversal(struct TreeNode* root, int* returnSize) 
{
    int n =TreeSize(root);
    int* a = (int*)malloc(sizeof(int)*n);
    *returnSize = n;
    int pi = 0;
     preorder(root,&pi, a);
    return a;
}